from odoo import api, models, fields
from odoo.exceptions import UserError, ValidationError
from datetime import datetime


class BVSLead(models.Model):
    _inherit = 'bvs.lead'

    fact_find_count = fields.Integer("No of Fact Find Forms", compute='_compute_fact_find_count')
    fact_find_ids = fields.One2many('fact.find', 'lead_id', string='Fact Find Forms')

    def get_first_fact_find_data(self):
        self.ensure_one()
        print("DEBUG lead id:", self.id)
        # Collect main partner and all applicants
        partner_ids = [self.partner_id.id] + self.applicant_ids.ids

        return {
            "type": "ir.actions.act_window",
            "res_model": "fact.find.partner.wizard",
            "view_mode": "form",
            "target": "new",
            "context": {
                "default_lead_id": self.id,
                "applicant_ids": partner_ids,
            },
        }
        #
        # fact_find = self.env['fact.find'].search([('partner_id', '=', self.partner_id.id)], order='create_date asc', limit=1)
        # if fact_find:
        #     values = {
        #         'first_name': fact_find.first_name,
        #         'surname': fact_find.surname,
        #         'email_address': fact_find.email_address,
        #         'mobile_number': fact_find.mobile_number,
        #         # 'above_commercial_property': fact_find.above_commercial_property,
        #         # 'additional_borrowing': fact_find.additional_borrowing,
        #         # 'additional_borrowing_amount': fact_find.additional_borrowing_amount,
        #         # 'additional_borrowing_reason': fact_find.additional_borrowing_reason,
        #         # 'address': fact_find.address,
        #         'address_history_ids': fact_find.address_history_ids,
        #         'adverse_credit_details': fact_find.adverse_credit_details,
        #         'alcohol_consumption_amount': fact_find.alcohol_consumption_amount,
        #         'alcohol_consumption_comment': fact_find.alcohol_consumption_comment,
        #         'alteration_passport': fact_find.alteration_passport,
        #         'annual_council_tax': fact_find.annual_council_tax,
        #         'annual_income': fact_find.annual_income,
        #         'annual_payment_information_letter': fact_find.annual_payment_information_letter,
        #         'annual_retirement_income': fact_find.annual_retirement_income,
        #         # 'annual_service_charge': fact_find.annual_service_charge,
        #         'arla_letter': fact_find.arla_letter,
        #         'arrangements_with_creditors': fact_find.arrangements_with_creditors,
        #         'arrears_with_mortgage_or_loans': fact_find.arrears_with_mortgage_or_loans,
        #         'bank_account_ids': fact_find.bank_account_ids,
        #         'bank_statement': fact_find.bank_statement,
        #         'bank_statement_name_confirmation': fact_find.bank_statement_name_confirmation,
        #         'bankruptcy': fact_find.bankruptcy,
        #         'borrower_type': fact_find.borrower_type,
        #         'brp_visa_stamp': fact_find.brp_visa_stamp,
        #         # 'building_name': fact_find.building_name,
        #         'car_insurance': fact_find.car_insurance,
        #         'case_history_ids': fact_find.case_history_ids,
        #         'ccj_against_you': fact_find.ccj_against_you,
        #         'child_tax_credit_award_letter': fact_find.child_tax_credit_award_letter,
        #         'childcare': fact_find.childcare,
        #         'cigarettes_per_day': fact_find.cigarettes_per_day,
        #         'claim_months': fact_find.claim_months,
        #         'clothing': fact_find.clothing,
        #         'cml_form': fact_find.cml_form,
        #         'commute_over_one_hour': fact_find.commute_over_one_hour,
        #         # 'company_director': fact_find.company_director,
        #         'company_name': fact_find.company_name,
        #         'contactable_person': fact_find.contactable_person,
        #         'contactable_person_mobile': fact_find.contactable_person_mobile,
        #         'country_id': fact_find.country_id,
        #         'country_of_birth': fact_find.country_of_birth.id if fact_find.country_of_birth else False,
        #         # 'county': fact_find.county,
        #         'create_date': fact_find.create_date,
        #         'create_uid': fact_find.create_uid,
        #         'credit_card_bill': fact_find.credit_card_bill,
        #         'credit_comment': fact_find.credit_comment,
        #         'credit_comment_ids': fact_find.credit_comment_ids,
        #         'critical_illness_ids': fact_find.critical_illness_ids,
        #         'current_monthly_rental_income': fact_find.current_monthly_rental_income,
        #         'currently_taking_medicines': fact_find.currently_taking_medicines,
        #         'customer_type': fact_find.customer_type,
        #         'date_of_birth': fact_find.date_of_birth,
        #         'date_of_name_change': fact_find.date_of_name_change,
        #         'debt_management_plan': fact_find.debt_management_plan,
        #         'default_registered': fact_find.default_registered,
        #         'dependant_status': fact_find.dependant_status,
        #         'deposit_from_another_loan': fact_find.deposit_from_another_loan,
        #         'deposit_from_equity_of_property': fact_find.deposit_from_equity_of_property,
        #         'deposit_from_savings': fact_find.deposit_from_savings,
        #         'direct_debit_account_bank_statements': fact_find.direct_debit_account_bank_statements,
        #         'display_name': fact_find.display_name,
        #         'driving_license': fact_find.driving_license,
        #         'driving_license_proof_address': fact_find.driving_license_proof_address,
        #         'dual_nationality': fact_find.dual_nationality,
        #         'dual_nationality_id': fact_find.dual_nationality_id.id if fact_find.dual_nationality_id else False,
        #         'education_fees': fact_find.education_fees,
        #         'electricity_bill': fact_find.electricity_bill,
        #         'email': fact_find.email,
        #         'employer_sick_pay_benefit': fact_find.employer_sick_pay_benefit,
        #         'employment_appointment_letter': fact_find.employment_appointment_letter,
        #         'employment_contract': fact_find.employment_contract,
        #         'employment_ids': fact_find.employment_ids,
        #         'employment_status': fact_find.employment_status,
        #         'entertainment': fact_find.entertainment,
        #         'epc': fact_find.epc,
        #         # 'epc_predicted_epc_rate': fact_find.epc_predicted_epc_rate,
        #         'estimated_built_year': fact_find.estimated_built_year,
        #         'estimated_monthly_protection_budget': fact_find.estimated_monthly_protection_budget,
        #         'estimated_monthly_rental_income': fact_find.estimated_monthly_rental_income,
        #         'eu_country_list': fact_find.eu_country_list,
        #         # 'ex_council': fact_find.ex_council,
        #         'existing_mortgages_ids': fact_find.existing_mortgages_ids,
        #         'existing_protection_cover': fact_find.existing_protection_cover,
        #         'expired_passport_driving_license': fact_find.expired_passport_driving_license,
        #         'failed_to_keep_up_repayments': fact_find.failed_to_keep_up_repayments,
        #         'financial_depend_ids': fact_find.financial_depend_ids,
        #         'financial_dependants': fact_find.financial_dependants,
        #         'firm_email': fact_find.firm_email,
        #         'firm_name': fact_find.firm_name,
        #         'flat_in_floor': fact_find.flat_in_floor,
        #         # 'flats_in_floor': fact_find.flats_in_floor,
        #         'flats_same_floor_count': fact_find.flats_same_floor_count,
        #         'food': fact_find.food,
        #         'frequency_of_drinking': fact_find.frequency_of_drinking,
        #         'future_travel_ids': fact_find.future_travel_ids,
        #         # 'garage_space': fact_find.garage_space,
        #         'gas_bill': fact_find.gas_bill,
        #         'gender': fact_find.gender,
        #         'gifted_deposit_amount_from_director': fact_find.gifted_deposit_amount_from_director,
        #         'gifted_deposit_bank_statements': fact_find.gifted_deposit_bank_statements,
        #         'gifted_deposit_format': fact_find.gifted_deposit_format,
        #         'gifted_deposit_from_family': fact_find.gifted_deposit_from_family,
        #         'gifted_deposit_from_friend': fact_find.gifted_deposit_from_friend,
        #         'gifted_family_details': fact_find.gifted_family_details,
        #         'gp_address': fact_find.gp_address,
        #         'gp_name': fact_find.gp_name,
        #         'gp_postcode': fact_find.gp_postcode,
        #         'gp_surgery': fact_find.gp_surgery,
        #         'gross_monthly_retirement_income': fact_find.gross_monthly_retirement_income,
        #         # 'ground_rent': fact_find.ground_rent,
        #         'health_condition_ids': fact_find.health_condition_ids,
        #         'height': fact_find.height,
        #         # 'help_to_buy_loan': fact_find.help_to_buy_loan,
        #         # 'help_to_buy_loan_type': fact_find.help_to_buy_loan_type,
        #         # 'hmo': fact_find.hmo,
        #         'home_insurance': fact_find.home_insurance,
        #         'home_telephone_number': fact_find.home_telephone_number,
        #         # 'house_flat_no': fact_find.house_flat_no,
        #         'house_number_solicitor': fact_find.house_number_solicitor,
        #         'household_goods': fact_find.household_goods,
        #         'htb_location': fact_find.htb_location,
        #         'htb_scheme_available': fact_find.htb_scheme_available,
        #         'immigration_status_sharecode': fact_find.immigration_status_sharecode,
        #         'income_type': fact_find.income_type,
        #         'indefinite_leave_to_remain': fact_find.indefinite_leave_to_remain,
        #         'is_new_build': fact_find.is_new_build,
        #         'is_private_lead': fact_find.is_private_lead,
        #         # 'kitchen': fact_find.kitchen,
        #         'known_by_another_name': fact_find.known_by_another_name,
        #         'land_phone_bill': fact_find.land_phone_bill,
        #         'last_2_years_bonus_payslips': fact_find.last_2_years_bonus_payslips,
        #         'last_2_years_p60': fact_find.last_2_years_p60,
        #         'last_2_years_tax_calculations': fact_find.last_2_years_tax_calculations,
        #         'last_2_years_tax_returns': fact_find.last_2_years_tax_returns,
        #         'last_2_years_tax_year_overview': fact_find.last_2_years_tax_year_overview,
        #         'last_3_months_bank_statements_pension': fact_find.last_3_months_bank_statements_pension,
        #         'last_3_months_bank_statements_salary': fact_find.last_3_months_bank_statements_salary,
        #         'last_3_months_payslips': fact_find.last_3_months_payslips,
        #         'latest_3_months_bank_statements_mortgage': fact_find.latest_3_months_bank_statements_mortgage,
        #         'latest_3_months_bank_statements_rental': fact_find.latest_3_months_bank_statements_rental,
        #         'latest_3_months_company_bank_statements': fact_find.latest_3_months_company_bank_statements,
        #         'latest_case_number': fact_find.latest_case_number,
        #         'latest_clearance_statement': fact_find.latest_clearance_statement,
        #         'latest_multi_agency_credit_report': fact_find.latest_multi_agency_credit_report,
        #         'latest_payslips': fact_find.latest_payslips,
        #         'lead_id': fact_find.lead_id,
        #         'lender_name': fact_find.lender_name,
        #         'life_insurance': fact_find.life_insurance,
        #         # 'living_rooms': fact_find.living_rooms,
        #         'loan_amount_from_director': fact_find.loan_amount_from_director,
        #         'marital_status': fact_find.marital_status,
        #         # 'market_price': fact_find.market_price,
        #         'medical_conditions': fact_find.medical_conditions,
        #         'medical_conditions_details': fact_find.medical_conditions_details,
        #         'medicine': fact_find.medicine,
        #         'medicines_details': fact_find.medicines_details,
        #         'memorandum_of_sale': fact_find.memorandum_of_sale,
        #         'middle_names': fact_find.middle_names,
        #         'missed_payment_last_3_years': fact_find.missed_payment_last_3_years,
        #         'mobile': fact_find.mobile,
        #         'monthly_commute_cost': fact_find.monthly_commute_cost,
        #         'monthly_expenses_bank_statements': fact_find.monthly_expenses_bank_statements,
        #         'monthly_income': fact_find.monthly_income,
        #         'monthly_mortgage_payment': fact_find.monthly_mortgage_payment,
        #         'monthly_rental_btl': fact_find.monthly_rental_btl,
        #         'mortgage_statement': fact_find.mortgage_statement,
        #         'mortgage_term': fact_find.mortgage_term,
        #         'mortgage_type': fact_find.mortgage_type,
        #         'name': fact_find.name,
        #         'name_confirmation_letter': fact_find.name_confirmation_letter,
        #         'nationality': fact_find.nationality,
        #         # 'no_bathrooms': fact_find.no_bathrooms,
        #         # 'no_bedrooms': fact_find.no_bedrooms,
        #         # 'no_stories_in_building': fact_find.no_stories_in_building,
        #         'number_of_dependents': fact_find.number_of_dependents,
        #         # 'occupants_count': fact_find.occupants_count,
        #         'other_email_address': fact_find.other_email_address,
        #         'other_expenses_bank_statements': fact_find.other_expenses_bank_statements,
        #         'other_income_bank_statements': fact_find.other_income_bank_statements,
        #         'other_nationality': fact_find.other_nationality,
        #         'other_nationality_id': fact_find.other_nationality_id.id if fact_find.other_nationality_id else False,
        #         'outstanding_amount': fact_find.outstanding_amount,
        #         # 'ownership_percentage': fact_find.ownership_percentage,
        #         'p60': fact_find.p60,
        #         # 'parking': fact_find.parking,
        #         'partner_id': fact_find.partner_id,
        #         'passport_expiry_date': fact_find.passport_expiry_date,
        #         'passport_pages': fact_find.passport_pages,
        #         'past_travel_ids': fact_find.past_travel_ids,
        #         'pdf_report': fact_find.pdf_report,
        #         'pea': fact_find.pea,
        #         'pea_rate': fact_find.pea_rate,
        #         'peal': fact_find.peal,
        #         'pension_bank_statements': fact_find.pension_bank_statements,
        #         'pension_forecast_statement': fact_find.pension_forecast_statement,
        #         'personal_goods': fact_find.personal_goods,
        #         'phone_internet': fact_find.phone_internet,
        #         'pip_dla_letter': fact_find.pip_dla_letter,
        #         # 'post_code': fact_find.post_code,
        #         'post_code_solicitor': fact_find.post_code_solicitor,
        #         'postal_document_past_3_months': fact_find.postal_document_past_3_months,
        #         'previous_name': fact_find.previous_name,
        #         'previous_surname': fact_find.previous_surname,
        #         'product_end_date': fact_find.product_end_date,
        #         'proof_of_address_driving_license': fact_find.proof_of_address_driving_license,
        #         'property_address': fact_find.property_address,
        #         'property_details_ids': fact_find.property_details_ids,
        #         # 'property_type': fact_find.property_type,
        #         # 'property_usage': fact_find.property_usage,
        #         'property_value': fact_find.property_value,
        #         'protection_ids': fact_find.protection_ids,
        #         'rate': fact_find.rate,
        #         'redeem_htb_loan': fact_find.redeem_htb_loan,
        #         'registered_with_uk_gp_years': fact_find.registered_with_uk_gp_years,
        #         'remaining_lease_term_in_years': fact_find.remaining_lease_term_in_years,
        #         'rent': fact_find.rent,
        #         'report_name': fact_find.report_name,
        #         'requested_direct_debit_bank_statement': fact_find.requested_direct_debit_bank_statement,
        #         'reservation_form': fact_find.reservation_form,
        #         'residential_status': fact_find.residential_status,
        #         # 'roof_construction_type': fact_find.roof_construction_type,
        #         'salary_increment_letter': fact_find.salary_increment_letter,
        #         'sales_particular': fact_find.sales_particular,
        #         'sales_particulars': fact_find.sales_particulars,
        #         'second_charge_details': fact_find.second_charge_details,
        #         'self_employment_ids': fact_find.self_employment_ids,
        #         'service_charge': fact_find.service_charge,
        #         'services_charge': fact_find.services_charge,
        #         'settled_status': fact_find.settled_status,
        #         'sharecode_immigration_status': fact_find.sharecode_immigration_status,
        #         # 'shared_ownership': fact_find.shared_ownership,
        #         'shared_ownership_available': fact_find.shared_ownership_available,
        #         # 'shared_ownership_existing': fact_find.shared_ownership_existing,
        #         'signed_finalized_latest_2_years_company_accounts': fact_find.signed_finalized_latest_2_years_company_accounts,
        #         'smoking': fact_find.smoking,
        #         'solicitor_contact_number': fact_find.solicitor_contact_number,
        #         'solicitor_contact_person': fact_find.solicitor_contact_person,
        #         'solicitor_email': fact_find.solicitor_email,
        #         'solicitor_firm_name': fact_find.solicitor_firm_name,
        #         'solicitor_house_number': fact_find.solicitor_house_number,
        #         'solicitor_id': fact_find.solicitor_id,
        #         'solicitor_post_code': fact_find.solicitor_post_code,
        #         'solicitor_address': fact_find.solicitor_address,
        #         'spv_bank_statements': fact_find.spv_bank_statements,
        #         'stage_id': fact_find.stage_id,
        #         'start_continue_living_in_uk': fact_find.start_continue_living_in_uk,
        #         'start_continue_living_in_uk_month': fact_find.start_continue_living_in_uk_month,
        #         'start_continue_living_in_uk_year': fact_find.start_continue_living_in_uk_year,
        #         'start_continue_living_in_ukn': fact_find.start_continue_living_in_ukn,
        #         'stop_drinking_date': fact_find.stop_drinking_date,
        #         'stop_smoking_date': fact_find.stop_smoking_date,
        #         # 'street_address': fact_find.street_address,
        #         'tax_calculations': fact_find.tax_calculations,
        #         'tax_credit_statement': fact_find.tax_credit_statement,
        #         'tax_credits_statement': fact_find.tax_credits_statement,
        #         'tax_returns': fact_find.tax_returns,
        #         'tax_year_overview': fact_find.tax_year_overview,
        #         'tenancy_agreement': fact_find.tenancy_agreement,
        #         'tenancy_agreements_multiple_occupants': fact_find.tenancy_agreements_multiple_occupants,
        #         # 'tenure': fact_find.tenure,
        #         'title_customer': fact_find.title_customer,
        #         'total_deposit_amount': fact_find.total_deposit_amount,
        #         'total_monthly_expenses': fact_find.total_monthly_expenses,
        #         'total_monthly_mortgage_payment': fact_find.total_monthly_mortgage_payment,
        #         'total_monthly_rental_btl': fact_find.total_monthly_rental_btl,
        #         'total_outstanding_amount': fact_find.total_outstanding_amount,
        #         'total_property_value': fact_find.total_property_value,
        #         'transport': fact_find.transport,
        #         'type_of_drink': fact_find.type_of_drink,
        #         'uk_dress_size': fact_find.uk_dress_size,
        #         'universal_tax_credit_statements': fact_find.universal_tax_credit_statements,
        #         'utilities': fact_find.utilities,
        #         'utility_bill_past_3_months': fact_find.utility_bill_past_3_months,
        #         'valid_will': fact_find.valid_will,
        #         'visa_category': fact_find.visa_category,
        #         'waist': fact_find.waist,
        #         'waiting_details': fact_find.waiting_details,
        #         'waiting_for_gp_hospital_referral_report': fact_find.waiting_for_gp_hospital_referral_report,
        #         # 'wall_construction_type': fact_find.wall_construction_type,
        #         # 'warranty_providers_name': fact_find.warranty_providers_name
        #
        #
        #     }
        #     self.fact_find_ids.write(values)  # write to fact_find instance
        #     return values


    @api.depends('fact_find_ids')
    def _compute_fact_find_count(self):
        for lead in self:
            lead.fact_find_count = len(lead.fact_find_ids)

    def view_fact_find(self):
        fact_find = self.mapped('fact_find_ids')
        action = self.env.ref('bvs_fact_find.action_fact_find_form').read()[0]
        if len(fact_find) > 1:
            action['domain'] = [('id', 'in', fact_find.ids)]
        elif len(fact_find) == 1:
            action['views'] = [(self.env.ref('bvs_fact_find.view_fact_find_form').id, 'form')]
            action['res_id'] = fact_find.ids[0]
        else:
            action = {'type': 'ir.actions.act_window_close'}
        action['context'] = {'create': False}
        return action

    def send_kyc_notification(self):
        for lead in self:
            lead.message_post(
                body='Fact Find Form Submitted!',
                message_type='notification',
                subtype_id=self.env['ir.model.data']._xmlid_to_res_id('mail.mt_comment'),
                author_id=self.env.user.id,
                notification_ids=[(0, 0, {'res_partner_id': lead.team_leader.partner_id.id, 'notification_type': 'inbox'})]
            )

    def send_kyc_document_notification(self):
        for lead in self:
            lead.message_post(
                body='Fact Find Initial Documents Submitted!',
                message_type='notification',
                subtype_id=self.env['ir.model.data']._xmlid_to_res_id('mail.mt_comment'),
                author_id=self.env.user.id,
                notification_ids=[(0, 0, {'res_partner_id': lead.team_leader.partner_id.id, 'notification_type': 'inbox'})]
            )
